//params srcWidth:int, srcHeight:int, miplevel:int, side:int
//result usedSize:uint

var key:int = miplevel * 10 + side;
var usedSize:uint = 0;

if (_mipmap[key] == null) {
	var mipWidth:int;
	var mipHeight:int;

	if (miplevel > 0) {
		mipWidth /= miplevel;
		mipHeight /= miplevel;
		
		if (mipWidth == 0) mipWidth = 1;
		if (mipHeight == 0) mipHeight = 1;
	} else {
		mipWidth = srcWidth;
		mipHeight = srcHeight;
	}
	
	usedSize = mipWidth * mipHeight;
	
	if (format == Context3DTextureFormat.BGRA) {
		usedSize *= 4;
	} else if (format == Context3DTextureFormat.COMPRESSED) {
		usedSize *= 0.5;
	} else if (format == Context3DTextureFormat.BGR_PACKED || Context3DTextureFormat.BGRA_PACKED) {
		usedSize *= 2;
	}
	
	_mipmap[key] = usedSize;
}